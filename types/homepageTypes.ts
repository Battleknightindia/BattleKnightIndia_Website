// types/homepageTypes.ts

export type NorthEastCupStat = {
  id: string; // Unique ID for each stat (important for keys and manipulation)
  name: string;
  value: string;
  color: string; // Can be hex, rgba, etc.
};

export type NorthEastCupItem = {
  id: string | undefined; // Optional for new items before they get a DB ID
  image: string; // URL for the image
  title: string;
  description: string;
  stats: NorthEastCupStat[]; // Crucially, ensure this is always an array
  "statColors": { [key: string]: string }; // Matches the database column name, for storing name-to-color mapping
  order_index: number;
};
  
  
  export type MediaItem = {
    id: string;
    title: string;
    date: string;
    type: "image" | "video";
    image: string;
    aspectRatio?: "portrait" | "landscape" | "square"; // For better sizing control
    description?: string;
    order_index: number; // Added for sorting purposes
  };
  
  // types/homepageTypes.ts
export interface CosplayItem {
  id?: string; // Optional for new items (UUID generated by DB on insert), required for existing
  order_index: number; // For controlling the display order
  image: string; // The URL of the image
  created_at?: string; // <--- ADD THIS LINE (optional for new, present for existing)
}
  
  export type FeaturedItem = {
    title: string,
    date: string,
    location: string,
    description: string,
    teamCount:  number,
    prizePool: string,
    ticketsUrl: string,
    watchUrl: string,
    bannerImage: string,
  }